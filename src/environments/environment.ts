// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`. isa

export const environment = {
  production: false,
  PRIMAL_CLIENT_ID: "1_578hyffbaggskkgg0cg04g44g4c448gswkw0kk0ow44c000k04",
  PRIMAL_CLIENT_SECRET: "1is4zff5dtk0ks0oco4sw8oggwskg008sooo88cswgg04w480g",
  reportServerURL: "http://localhost:8080/jasperserver",
  serverURL: "http://ec2-13-40-194-58.eu-west-2.compute.amazonaws.com:8000",
  // serverURL: "http://192.168.1.165:8000",
  // serverURL: "http://localhost:8000",
  authURI: "/oauth/v2/token",
  STORAGE_SECRET: "SEC1234567890",
  USER_EMAIL: "postman@primal.com",
  USER_PASSWORD: "postman123",
  defaultAvatar: "/assets/images/avatars/profile.jpg",
  version: "V0.0",
};

// {
//   "@context": "/api/contexts/Entrypoint",
//   "@id": "/api",
//   "@type": "Entrypoint",
//   "payment": "/api/payments",
//   "ffp": "/api/ffps",
//   "translatedText": "/api/translated_texts",
//   "productCategory": "/api/product_categories",
//   "pnl": "/api/pnls",
//   "checkIn": "/api/check_ins",
//   "bookingTransaction": "/api/booking_transactions",
//   "apFax": "/api/ap_faxes",
//   "currency": "/api/currencies",
//   "baggage": "/api/baggage",
//   "scheduleHasSegment": "/api/schedule_has_segments",
//   "delayCode": "/api/delay_codes",
//   "language": "/api/languages",
//   "pnr": "/api/pnrs",
//   "bookingLegStop": "/api/booking_leg_stops",
//   "passengerNameList": "/api/passenger_name_lists",
//   "bookingCluster": "/api/booking_clusters",
//   "appliedCharges": "/api/applied_charges",
//   "messageText": "/api/message_texts",
//   "legFare": "/api/leg_fares",
//   "bookingBlackout": "/api/booking_blackouts",
//   "aircraft": "/api/aircraft",
//   "passenger": "/api/passengers",
//   "city": "/api/cities",
//   "fareRule": "/api/fare_rules",
//   "salesChannel": "/api/sales_channels",
//   "segment": "/api/segments",
//   "fareDbr": "/api/fare_dbrs",
//   "flight": "/api/flights",
//   "rating": "/api/ratings",
//   "agentType": "/api/agent_types",
//   "designCategory": "/api/design_categories",
//   "bookingClusterRule": "/api/booking_cluster_rules",
//   "country": "/api/countries",
//   "agent": "/api/agents",
//   "flightLeg": "/api/flight_legs",
//   "delay": "/api/delays",
//   "inventory": "/api/inventories",
//   "book": "/api/books",
//   "salesRestriction": "/api/sales_restrictions",
//   "cabinClass": "/api/cabin_classes",
//   "carrierType": "/api/carrier_types",
//   "reservedSeat": "/api/reserved_seats",
//   "booking": "/api/bookings",
//   "bookingRemark": "/api/booking_remarks",
//   "zplDesign": "/api/zpl_designs",
//   "fareDbrLeg": "/api/fare_dbr_legs",
//   "bookingLegFare": "/api/booking_leg_fares",
//   "aircraftImage": "/api/aircraft_images",
//   "ssr": "/api/ssrs",
//   "waitList": "/api/wait_lists",
//   "seatMap": "/api/seat_maps",
//   "classBand": "/api/class_bands",
//   "bookingHistory": "/api/booking_histories",
//   "commission": "/api/commissions",
//   "validity": "/api/validities",
//   "coupon": "/api/coupons",
//   "teletypeMessage": "/api/teletype_messages",
//   "tax": "/api/taxes",
//   "aircraftType": "/api/aircraft_types",
//   "bookingLeg": "/api/booking_legs",
//   "operator": "/api/operators",
//   "bookedProduct": "/api/booked_products",
//   "inventoryCap": "/api/inventory_caps",
//   "greeting": "/api/greetings",
//   "fare": "/api/fares",
//   "contact": "/api/contacts",
//   "messageConfiguration": "/api/message_configurations",
//   "airline": "/api/airlines",
//   "crew": "/api/crews",
//   "flightBlackout": "/api/flight_blackouts",
//   "bookingClusterSurcharge": "/api/booking_cluster_surcharges",
//   "product": "/api/products",
//   "bookingLegStopFare": "/api/booking_leg_stop_fares",
//   "discount": "/api/discounts",
//   "endorsement": "/api/endorsements",
//   "review": "/api/reviews",
//   "messageTextTranslation": "/api/message_text_translations",
//   "timeLimit": "/api/time_limits",
//   "scheduleLeg": "/api/schedule_legs",
//   "timezone": "/api/timezones",
//   "schedule": "/api/schedules",
//   "dcsProfile": "/api/dcs_profiles",
//   "blockSeat": "/api/block_seats",
//   "seat": "/api/seats",
//   "passengerType": "/api/passenger_types",
//   "rbd": "/api/rbds",
//   "visaDetails": "/api/visa_details",
//   "crewLicense": "/api/crew_licenses",
//   "passportDetails": "/api/passport_details",
//   "role": "/api/roles",
//   "cabin": "/api/cabins",
//   "airport": "/api/airports",
//   "permission": "/api/permissions",
//   "bookingLegFareBreakdown": "/api/booking_leg_fare_breakdowns",
//   "flightConnection": "/api/flight_connections",
//   "salesLocation": "/api/sales_locations",
//   "taxExemption": "/api/tax_exemptions"
// }

/*
* For easier debugging in development mode, you can import the following file
* to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
*
* This import should be commented out in production mode because it will have a negative impact
* on performance if an error is thrown.
*/
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.
// http://192.168.10.100:8000/api/boardingpass?paxId=$P{paxId}&bookingLegId=$P{bookingLegId}
